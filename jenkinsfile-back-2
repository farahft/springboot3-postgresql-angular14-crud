pipeline {
    agent any
    environment{SCANNER_HOME = tool 'sonar' }
    tools {
        maven 'maven'
        dockerTool 'docker'
    }

    stages {
        stage('Github') {
                steps {
                    checkout scmGit(branches: [[name: '*/develop']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/farahft/springboot3-postgresql-angular14-crud']])
                }
        }

        stage('Build maven'){
            steps{
                dir('./backend/crud-application') {
                    sh 'mvn install -DskipTests'
                }
            }
        }
          stage('SoanrQube Analysis') {
            steps {
                dir('./backend/crud-application') {
                //  test code with sonarqube
                withSonarQubeEnv(installationName: 'sonar', credentialsId: 'sonar')  {
                   
                        sh 'mvn sonar:sonar'
            
}}
                }
               }
        stage('docker image'){
            steps{
                dir('./backend/crud-application'){
                script{
                     sh 'docker build -t farahft/back:1.0.0 .'
                 }
                 }
             }
          }
         stage('hub'){
             steps{
                 script{
                     withDockerRegistry(credentialsId: 'dockerHubPwd', toolName: 'docker') {
                         sh 'docker push farahft/back:1.0.0 '
                     }
                 }
             }
         }
        // stage('Deploy to K8s') {
         //   steps {
          //      dir('./backend') {
            //    script {
             //       kubernetesDeploy(configs: "deployementbackend.yaml", kubeconfigId: "kubernetes")
              //      }
               // }
            //}
       // }
         
    }
    post {
    success {
      slackSend color: '#ffffff', message: "backend succeeded"
    }
    failure {
      slackSend color: '#000000', message: "backend failed"
    }
  }
}