pipeline {
    agent any
    environment{SCANNER_HOME = tool 'sonar' }
    tools {
        nodejs 'nodejs'
        dockerTool 'docker'
    }
    stages {
        stage('Github') {
                steps {
                        checkout scmGit(branches: [[name: '*/develop']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/farahft/springboot3-postgresql-angular14-crud']])
                    }
        }
        stage('Build'){
            steps{
                dir('./frontend/crud-application') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }
        stage('SoanrQube Analysis') {
            steps {
                dir('./frontend/crud-application') {
                 //test code with sonarqube
                withSonarQubeEnv(installationName: 'sonar', credentialsId: 'sonar')  {
                    sh '''$SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectKey=jenkins \
                        -Dsonar.sources=.'''}}
                }
               }
        stage('docker image'){
            steps{
                dir('./frontend/crud-application'){
                script{
                    sh 'docker ps'
                    sh 'docker build -t farahft/front:1.0.0 .'
                }
                }
            }
         }

        stage('Push to docker hub'){
            steps{
                script{
                    withDockerRegistry(credentialsId: 'dockerHubPwd', toolName: 'docker') {
                        sh "docker push farahft/front:1.0.0"
                    }
                }
            }
        }

    }
    post {
    success {
      slackSend color: '#ffffff', message: "Deployment of frontend succeeded!"
    }
    failure {
      slackSend color: '#000000', message: "Deployment of frontend failed!"
    }
  }
}
